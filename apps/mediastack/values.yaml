qbittorrent:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
      mountPath: /config
      accessMode: ReadWriteOnce
      size: 1Gi
    data:
      enabled: true
      mountPath: /data/torrents
      existingClaim: mediastack-data
      subPath: torrents/
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: qBittorrent
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host qbittorrent.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: qbittorrent-tls-certificate
          hosts:
            - *host
radarr:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  image:
    repository: lscr.io/linuxserver/radarr
    tag: develop
  persistence:
    config:
      enabled: true
    data:
      enabled: true
      mountPath: /data
      existingClaim: mediastack-data
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: radarr
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host radarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: radarr-tls-certificate
          hosts:
            - *host
kube-plex:
  # use this when expanding config disk, this frees the PVC from the pod
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  plex:
    serverURL: "https://plex.tribz.cloud"
    # serverIngressURL: "https://plex.tribz.cloud"
    # serverIngressURLPort: "443"
  persistence:
    config:
      enabled: true
      size: 2Gi
    data:
      enabled: true
      mountPath: /data/media
      claimName: mediastack-data
      subPath: media/
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: Plex
        hajimari.io/icon: multimedia
      hosts:
        - host: &host plex.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: plex-tls-certificate
          hosts:
            - *host
jellyfin:
  # use this when expanding config disk, this frees the PVC from the pod
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  image:
    repository: lscr.io/linuxserver/jellyfin
    tag: latest
  persistence:
    config:
      enabled: true
      size: 10Gi
    data:
      enabled: true
      mountPath: /data/media
      existingClaim: mediastack-data
      subPath: media/
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        external-dns.alpha.kubernetes.io/target: "homelab-tunnel.tribz.cloud"
        external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        hajimari.io/appName: Jellyfin
        hajimari.io/icon: multimedia
      hosts:
        - host: &host jellyfin.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: jellyfin-tls-certificate
          hosts:
            - *host
    local:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: Jellyfin-Local
        hajimari.io/icon: multimedia
      hosts:
        - host: &host jellyfin-local.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: jellyfin-local-tls-certificate
          hosts:
            - *host
lidarr:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
    data:
      enabled: true
      mountPath: /data
      existingClaim: mediastack-data
  image:
    repository: lscr.io/linuxserver/lidarr
    tag: develop
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: lidarr
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host lidarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: lidarr-tls-certificate
          hosts:
            - *host
sonarr:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
    data:
      enabled: true
      mountPath: /data
      existingClaim: mediastack-data
  image:
    repository: lscr.io/linuxserver/sonarr
    tag: develop
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: Sonarr
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host sonarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: sonarr-tls-certificate
          hosts:
            - *host
readarr:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
      size: 2Gi
    data:
      enabled: true
      mountPath: /data
      existingClaim: mediastack-data
  image:
    repository: lscr.io/linuxserver/readarr
    tag: develop
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: Readarr
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host readarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: readarr-tls-certificate
          hosts:
            - *host
prowlarr:
  controller:
    replicas: 1
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
      size: 2Gi
  image:
    repository: lscr.io/linuxserver/prowlarr
    tag: develop
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: prowlarr
        hajimari.io/icon: sync
        hajimari.io/group: arr
      hosts:
        - host: &host prowlarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: prowlarr-tls-certificate
          hosts:
            - *host
bazarr:
  controller:
    replicas: 1
  podSecurityContext:
    runAsUser: 911
    runAsGroup: 911
    fsGroup: 911
    supplementalGroups: []
    fsGroupChangePolicy: OnRootMismatch
  securityContext:
    readOnlyRootFilesystem: false
    allowPrivilegeEscalation: true
    privileged: true
  env:
    TZ: Europe/Zurich
  persistence:
    config:
      enabled: true
      size: 1Gi
    data:
      enabled: true
      mountPath: /data
      existingClaim: mediastack-data
  ingress:
    main:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        hajimari.io/appName: bazarr
        hajimari.io/icon: pirate
        hajimari.io/group: arr
      hosts:
        - host: &host bazarr.tribz.cloud
          paths:
            - path: /
              pathType: Prefix
      tls:
        - secretName: bazarr-tls-certificate
          hosts:
            - *host