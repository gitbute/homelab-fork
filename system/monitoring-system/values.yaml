# kube-prometheus-stack:
grafana:
  adminPassword: admin
  defaultDashboardsTimezone: Europe/Zurich
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      hajimari.io/appName: Grafana
      hajimari.io/icon: chart-bar
    hosts:
      - &host grafana.tribz.cloud
    tls:
      - secretName: grafana-general-tls
        hosts:
          - *host
  plugins:
    - grafana-worldmap-panel
  # dashboardProviders: 
  #   dashboardproviders.yaml:
  #     apiVersion: 1
  #     providers:
  #     - name: 'default'
  #       orgId: 1
  #       folder: ''
  #       type: file
  #       disableDeletion: false
  #       editable: true
  #       options:
  #         path: /var/lib/grafana/dashboards/default
  # dashboards:
  #   default:
  #     OPNsense:
  #       json: |
  #         $RAW_JSON
      # OPNsense:
      #   url: https://raw.githubusercontent.com/bsmithio/OPNsense-Dashboard/master/OPNsense-Grafana-Dashboard.json
      # Longhorn:
      #   gnetId: 13032
  additionalDataSources:
    - name: Loki
      type: loki
      url: http://loki.loki:3100
    - name: InfluxDB
      type: influxdb
      access: proxy
      url: https://influxdb2.tribz.cloud
      secureJsonData:
        token: 4iDZfjN4RjHtTPYYipf6zNvUz6Te5eeeuB_Zl0ucAVLMl2giCZ6gpvv3O51Cof-jTmf0HsaO6VM7G3SPNJMNag==
      jsonData:
        version: Flux
        organization: opnsense
        defaultBucket: opnsense
    - name: Elasticsearch
      type: elasticsearch
      access: proxy
      url: https://elasticsearch.tribz.cloud
      database: graylog_0
      jsonData:
        timeField: "timestamp"
        esVersion: "7.17.3"
    # - name: graphite
    #   type: graphite
    #   access: proxy
    #   url: https://graphite.tribz.cloud
    #   jsonData:
    #     graphiteVersion: "1.1"
  envFromSecret: grafana-secrets
  grafana.ini:
    server:
      root_url: https://grafana.tribz.cloud
    auth.generic_oauth:
      enabled: true
      allow_sign_up: true
      name: Dex
      client_id: grafana-sso
      client_secret: $__env{GRAFANA_SSO_CLIENT_SECRET}
      scopes: openid profile email groups
      auth_url: https://dex.tribz.cloud/auth
      token_url: https://dex.tribz.cloud/token
      api_url: https://dex.tribz.cloud/userinfo
prometheus:
  prometheusSpec:
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    storageSpec: 
     volumeClaimTemplate:
       spec:
         storageClassName: freenas-nfs-csi-retain
         accessModes: ["ReadWriteOnce"]
         resources:
           requests:
             storage: 50Gi
    # additionalScrapeConfigs:
    # - job_name: 'opnsense-telegraf'
    #   static_configs:
    #     - targets: ['opnsense.tribz.cloud:9273']
    # - job_name: 'truenas-graphite-exporter'
    #   static_configs:
    #     - targets: ['dummy-ops-cluster-dummy-master.mysql:9125']
alertmanager:
  config:
    route:
      repeat_interval: 1h
      routes:
        - receiver: "null"
          matchers:
            # - alertname =~ "InfoInhibitor|Watchdog"
            - alertname =~ "InfoInhibitor"
        - receiver: 'matrix'
          continue: true
    receivers:
      - name: "null"  # Add this to your config as well
      - name: 'matrix'
        webhook_configs:
        - url: 'http://monitoring-system-matrix-alertmanager.monitoring-system/alerts?secret=veryverysecretkeyhere'
          send_resolved: true
kubeApiServer:
  enabled: true
kubeControllerManager:
  enabled: true
  endpoints:
  - 192.168.1.200
  - 192.168.1.201
  - 192.168.1.202
kubeScheduler:
  enabled: true
  endpoints:
  - 192.168.1.200
  - 192.168.1.201
  - 192.168.1.202
kubeProxy:
  enabled: true
  endpoints:
  - 192.168.1.200
  - 192.168.1.201
  - 192.168.1.202
kubeEtcd:
  enabled: true
  endpoints:
  - 192.168.1.200
  - 192.168.1.201
  - 192.168.1.202
  service:
    enabled: true
    port: 2381
    targetPort: 2381